digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="std::exception",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node0 [label="HTTPRequestParser::\lInvalidRequestHeader",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPRequestParser_1_1InvalidRequestHeader.html",tooltip="An exception indicating an invalid request header."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="HTTPRequestParser::\lInvalidRequestLine",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPRequestParser_1_1InvalidRequestLine.html",tooltip="An exception indicating an invalid request line."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="HTTPServer::AcceptError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPServer_1_1AcceptError.html",tooltip="Exception thrown when the server fails to accept a new connection."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="HTTPServer::BindError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPServer_1_1BindError.html",tooltip="Exception thrown when the server fails to bind to a port."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="HTTPServer::ListenError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPServer_1_1ListenError.html",tooltip="Exception thrown when the server fails to listen on a port."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="HTTPServer::SocketError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPServer_1_1SocketError.html",tooltip="Exception thrown when a socket operation fails."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="HTTPServer::SocketOption\lError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classHTTPServer_1_1SocketOptionError.html",tooltip="Exception thrown when setting socket options fails."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="Parser::ConfigFileNotFound\lException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser_1_1ConfigFileNotFoundException.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="Parser::InvalidDirective\lException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser_1_1InvalidDirectiveException.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="Parser::MissingMandatory\lException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser_1_1MissingMandatoryException.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="Parser::ResourceNotFound\lException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser_1_1ResourceNotFoundException.html",tooltip=" "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="Parser::SyntaxErrorException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classParser_1_1SyntaxErrorException.html",tooltip=" "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ServerManager::PollError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServerManager_1_1PollError.html",tooltip="Exception thrown when an error occurs during polling."];
  Node1 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ServerManager::ServerNot\lFound",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServerManager_1_1ServerNotFound.html",tooltip="Exception thrown when a server is not found."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ServerManager::SocketNot\lFound",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classServerManager_1_1SocketNotFound.html",tooltip="Exception thrown when a socket file descriptor is not found."];
}
